import nodemailer from 'nodemailer'

class emailsender {
  constructor(serverConfig) {
    this.serverConfig = serverConfig
    this.transporter = nodemailer.createTransport(serverConfig)
  }

  //use promise not callback
  promise() {
    this.promiseMode = true
    return this
  }

  sendAction(handler) {
    this.transporter.sendMail(this.mailConfig, (err, info) => {
      handler(err, info)
    })
  }

  send(mailConfig, callback) {
    this.mailConfig = mailConfig

    if (this.promiseMode) {
      return new Promise((resolve, reject) => {
        this.sendAction((err, info) => {
          if (!!err) {
            reject(err)
          } else {
            resolve(info)
          }
        })
      })
    } else {
      this.sendAction((err, info) => {
        callback(err, info)
      })
    }
  }

  //163 mail deny email's from field not equal emailserver's user 
  send163(mailConfig, callback) {
    this.send(Object.assign(mailConfig, { from: this.serverConfig.auth.user }), callback)
  }
}

export default emailsender
